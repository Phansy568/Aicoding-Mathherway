{"ast":null,"code":"var _jsxFileName = \"D:\\\\BaiduSyncdisk\\\\\\u5927\\u5B66\\\\\\u7ADE\\u8D5B\\u3001\\u9879\\u76EE\\\\AI\\u7F16\\u7A0B\\\\frontend\\\\src\\\\components\\\\KnowledgeGraph\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const KnowledgeGraph = ({\n  data,\n  width,\n  height\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  useEffect(() => {\n    if (!svgRef.current) return;\n\n    // 清除现有内容\n    d3.select(svgRef.current).selectAll(\"*\").remove();\n\n    // 创建力导向图布局\n    const simulation = d3.forceSimulation(data.nodes).force(\"link\", d3.forceLink(data.edges).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-200)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    const svg = d3.select(svgRef.current);\n\n    // 绘制边\n    const edges = svg.selectAll(\".edge\").data(data.edges).enter().append(\"line\").attr(\"class\", \"edge\").style(\"stroke\", \"#999\").style(\"stroke-opacity\", 0.6);\n\n    // 绘制节点\n    const nodes = svg.selectAll(\".node\").data(data.nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragStarted).on(\"drag\", dragged).on(\"end\", dragEnded));\n\n    // 添加节点圆形\n    nodes.append(\"circle\").attr(\"r\", 20).style(\"fill\", d => getColorByCategory(d.category));\n\n    // 添加节点文本\n    nodes.append(\"text\").text(d => d.label).attr(\"text-anchor\", \"middle\").attr(\"dy\", 30);\n\n    // 更新力导向图\n    simulation.on(\"tick\", () => {\n      edges.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      nodes.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n    });\n\n    // 拖拽相关函数\n    function dragStarted(event) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }\n    function dragged(event) {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }\n    function dragEnded(event) {\n      if (!event.active) simulation.alphaTarget(0);\n      event.subject.fx = null;\n      event.subject.fy = null;\n    }\n  }, [data, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"knowledge-graph\",\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: width,\n      height: height,\n      style: {\n        border: '1px solid #ccc'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n// 根据知识点类别返回不同颜色\n_s(KnowledgeGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = KnowledgeGraph;\nfunction getColorByCategory(category) {\n  const colorMap = {\n    '函数': '#FF6B6B',\n    '几何': '#4ECDC4',\n    '代数': '#45B7D1',\n    '概率统计': '#96CEB4'\n  };\n  return colorMap[category] || '#666';\n}\nexport default KnowledgeGraph;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","KnowledgeGraph","data","width","height","_s","svgRef","current","select","selectAll","remove","simulation","forceSimulation","nodes","force","forceLink","edges","id","d","distance","forceManyBody","strength","forceCenter","svg","enter","append","attr","style","call","drag","on","dragStarted","dragged","dragEnded","getColorByCategory","category","text","label","source","x","y","target","event","active","alphaTarget","restart","subject","fx","fy","className","children","ref","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","colorMap","$RefreshReg$"],"sources":["D:/BaiduSyncdisk/大学/竞赛、项目/AI编程/frontend/src/components/KnowledgeGraph/index.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { GraphData, KnowledgeNode } from './types';\r\n\r\ninterface KnowledgeGraphProps {\r\n  data: GraphData;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport const KnowledgeGraph: React.FC<KnowledgeGraphProps> = ({ data, width, height }) => {\r\n  const svgRef = useRef<SVGSVGElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!svgRef.current) return;\r\n\r\n    // 清除现有内容\r\n    d3.select(svgRef.current).selectAll(\"*\").remove();\r\n\r\n    // 创建力导向图布局\r\n    const simulation = d3.forceSimulation(data.nodes as d3.SimulationNodeDatum[])\r\n      .force(\"link\", d3.forceLink(data.edges)\r\n        .id((d: d3.SimulationNodeDatum) => (d as any).id)\r\n        .distance(100))\r\n      .force(\"charge\", d3.forceManyBody().strength(-200))\r\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n    const svg = d3.select(svgRef.current);\r\n\r\n    // 绘制边\r\n    const edges = svg.selectAll(\".edge\")\r\n      .data(data.edges)\r\n      .enter()\r\n      .append(\"line\")\r\n      .attr(\"class\", \"edge\")\r\n      .style(\"stroke\", \"#999\")\r\n      .style(\"stroke-opacity\", 0.6);\r\n\r\n    // 绘制节点\r\n    const nodes = svg.selectAll(\".node\")\r\n      .data(data.nodes)\r\n      .enter()\r\n      .append(\"g\")\r\n      .attr(\"class\", \"node\")\r\n      .call(d3.drag<any, any>()\r\n        .on(\"start\", dragStarted)\r\n        .on(\"drag\", dragged)\r\n        .on(\"end\", dragEnded));\r\n\r\n    // 添加节点圆形\r\n    nodes.append(\"circle\")\r\n      .attr(\"r\", 20)\r\n      .style(\"fill\", (d: KnowledgeNode) => getColorByCategory(d.category));\r\n\r\n    // 添加节点文本\r\n    nodes.append(\"text\")\r\n      .text((d: KnowledgeNode) => d.label)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"dy\", 30);\r\n\r\n    // 更新力导向图\r\n    simulation.on(\"tick\", () => {\r\n      edges\r\n        .attr(\"x1\", (d: any) => d.source.x)\r\n        .attr(\"y1\", (d: any) => d.source.y)\r\n        .attr(\"x2\", (d: any) => d.target.x)\r\n        .attr(\"y2\", (d: any) => d.target.y);\r\n\r\n      nodes\r\n        .attr(\"transform\", (d: any) => `translate(${d.x},${d.y})`);\r\n    });\r\n\r\n    // 拖拽相关函数\r\n    function dragStarted(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0.3).restart();\r\n      event.subject.fx = event.subject.x;\r\n      event.subject.fy = event.subject.y;\r\n    }\r\n\r\n    function dragged(event: any) {\r\n      event.subject.fx = event.x;\r\n      event.subject.fy = event.y;\r\n    }\r\n\r\n    function dragEnded(event: any) {\r\n      if (!event.active) simulation.alphaTarget(0);\r\n      event.subject.fx = null;\r\n      event.subject.fy = null;\r\n    }\r\n  }, [data, width, height]);\r\n\r\n  return (\r\n    <div className=\"knowledge-graph\">\r\n      <svg\r\n        ref={svgRef}\r\n        width={width}\r\n        height={height}\r\n        style={{ border: '1px solid #ccc' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// 根据知识点类别返回不同颜色\r\nfunction getColorByCategory(category: string): string {\r\n  const colorMap = {\r\n    '函数': '#FF6B6B',\r\n    '几何': '#4ECDC4',\r\n    '代数': '#45B7D1',\r\n    '概率统计': '#96CEB4'\r\n  };\r\n  return colorMap[category as keyof typeof colorMap] || '#666';\r\n}\r\n\r\nexport default KnowledgeGraph; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}